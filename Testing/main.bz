link "raylib"
link "gdi32"
link "winmm"

cfn printf(byte[] fmt, *) i32

type color {
    byte r,
    byte g,
    byte b,
    byte a
}

type texture {
    i32 id,
    i32 width,
    i32 height,
    i32 mipmaps,
    i32 format
}

type rectangle {
    float x,
    float y,
    float width,
    float height
}

type vec2 {
    float x,
    float y
}

cfn InitWindow(int w, int h, byte[] title)
cfn WindowShouldClose() bool
cfn BeginDrawing()
cfn EndDrawing()
cfn ClearBackground(color c)
cfn SetTargetFPS(int fps)

cfn LoadTexture(byte[] path) texture
cfn LoadImage(byte[] path) i32
cfn DrawTextureRec(texture t, rectangle r, vec2 pos, color c)
cfn GetWorkingDirectory() void@
cfn InitAudioDevice()

cfn strlen(byte[]) i32

fn main() {
    call InitWindow(800, 450, "Minesweeper")

    let color bg = color!{ 200, 200, 200, 255 }

    let byte[] path = "assets/1.png"
    let texture opened = LoadTexture(path)

    let texture _1 = LoadTexture("assets/1.png")
    let texture _2 = LoadTexture("assets/2.png")
    let texture _3 = LoadTexture("assets/3.png")
    let texture _4 = LoadTexture("assets/4.png")
    let texture _5 = LoadTexture("assets/5.png")
    let texture _6 = LoadTexture("assets/6.png")
    let texture _7 = LoadTexture("assets/7.png")
    let texture _8 = LoadTexture("assets/8.png")
    let texture[] numbers = [ opened, _1, _2, _3, _4, _5, _6, _7, _8 ]

    let float size = 30
    let rectangle tileRect = rectangle!{0,0,size,size}
    let color tint = color!{255,255,255,255}


    call SetTargetFPS(60)

    while !WindowShouldClose() {
        call BeginDrawing()

            call ClearBackground(bg)
            call DrawTextureRec(_1, tileRect, vec2!{0,0}, tint)

        call EndDrawing()
    }
}
